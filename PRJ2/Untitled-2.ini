<?php
require 'vendor/autoload.php';

use Telegram\Bot\Api;

// Создаем объект API с токеном вашего бота (без URL)
$telegram = new Api('8106155129:AAGZB3kFSlMmLozV737St8Kw64ej_E02B_w');

// Получаем обновления от Telegram
$upd = $telegram->getWebhookUpdates();

// Получаем ID чата и сообщение
$chatId = $upd->getMessage()->getChat()->getId();  // Получаем реальный ID чата от API
$message = $upd->getMessage()->getText();           // Получаем текст сообщения

// Функция для поиска в Википедии
function searchWikipedia($query) {
    $url = "https://ru.wikipedia.org/w/api.php?action=query&list=search&srsearch=" . urlencode($query) . "&format=json";
    $response = file_get_contents($url);
    $data = json_decode($response, true);

    // Проверка наличия результатов
    if (isset($data['query']['search'][0])) {
        $title = $data['query']['search'][0]['title'];
        $snippet = strip_tags($data['query']['search'][0]['snippet']);
        return "Результат: $title\n$snippet";
    } else {
        return "Ничего не найдено по запросу: $query";
    }
}

// Обработка команды /start
if ($message == '/start') {
    $responseMessage = "Привет! Отправь мне запрос, и я найду информацию в Википедии.";
    $telegram->sendMessage([
        'chat_id' => $chatId,     // Используем динамически полученный chatId
        'text' => $responseMessage
    ]);
} 
// Обработка остальных сообщений
else {
    $responseMessage = searchWikipedia($message);
    $telegram->sendMessage([
        'chat_id' => $chatId,     // Используем динамически полученный chatId
        'text' => $responseMessage
    ]);
}
?>